{"ast":null,"code":"var _jsxFileName = \"/Users/xaviercarty/Development/code/Mod4/Labs/lutrivia-react-nyc04-seng-ft-030920/lutrivia/src/TriviaItem.js\";\nimport React, { Component } from 'react';\n\nclass TriviaItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = () => {\n      console.log(this.props);\n      return this.props.score += 1;\n    };\n  }\n\n  render() {\n    const array = this.props.item.map((text, index) => {\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" \", text.text, \" \"), text.answer ? React.createElement(\"button\", {\n        style: btnStyle,\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"True \") : React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"True\"), text.answer ? React.createElement(\"button\", {\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"False\") : React.createElement(\"button\", {\n        onClick: this.handleChange,\n        style: btnFalse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"False\"));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, array);\n  }\n\n}\n\nconst style = {\n  backgroundColor: \"grey\",\n  marginTop: \"50px\"\n};\nconst btnStyle = {\n  backgroundColor: \"green\",\n  marginRight: \"10px\"\n};\nconst btnFalse = {\n  backgroundColor: \"red\"\n};\nexport default TriviaItem;","map":{"version":3,"sources":["/Users/xaviercarty/Development/code/Mod4/Labs/lutrivia-react-nyc04-seng-ft-030920/lutrivia/src/TriviaItem.js"],"names":["React","Component","TriviaItem","handleChange","console","log","props","score","render","array","item","map","text","index","style","answer","btnStyle","btnFalse","backgroundColor","marginTop","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BE,YAF+B,GAEhB,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACC,aAAQ,KAAKA,KAAL,CAAWC,KAAX,IAAoB,CAA5B;AAGA,KAP8B;AAAA;;AAU/BC,EAAAA,MAAM,GAAG;AAGL,UAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAC/C,aACI;AAAK,QAAA,KAAK,EAAIC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAG,QAAA,GAAG,EAAED,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiBD,IAAI,CAACA,IAAtB,MADH,EAEFA,IAAI,CAACG,MAAL,GAAa;AAAQ,QAAA,KAAK,EAAGC,QAAhB;AAA0B,QAAA,OAAO,EAAG,KAAKb,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb,GAAqF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFnF,EAGFS,IAAI,CAACG,MAAL,GAAa;AAAQ,QAAA,OAAO,EAAG,KAAKZ,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb,GAAmE;AAAQ,QAAA,OAAO,EAAE,KAAKA,YAAtB;AAAoC,QAAA,KAAK,EAAGc,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHjE,CADJ;AAOF,KARa,CAAd;AAWA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACER,KADF,CADI;AAKN;;AA7BiC;;AAgCnC,MAAMK,KAAK,GAAG;AAEVI,EAAAA,eAAe,EAAC,MAFN;AAGVC,EAAAA,SAAS,EAAE;AAHD,CAAd;AAOA,MAAMH,QAAQ,GAAG;AACbE,EAAAA,eAAe,EAAE,OADJ;AAEbE,EAAAA,WAAW,EAAE;AAFA,CAAjB;AAKA,MAAMH,QAAQ,GAAG;AACbC,EAAAA,eAAe,EAAE;AADJ,CAAjB;AAIA,eAAehB,UAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass TriviaItem extends Component {\n\n    handleChange = () => {\n    console.log(this.props)\n     return  this.props.score += 1 \n\n\n    }\n\n\n    render() {\n    \n        \n        const array = this.props.item.map((text,index) => {\n           return (\n               <div style = {style}>\n                  <p key={index}> {text.text} </p>\n            {text.answer? <button style ={btnStyle} onClick ={this.handleChange}>True </button> : <button>True</button>}\n            {text.answer? <button onClick ={this.handleChange}>False</button> : <button onClick={this.handleChange} style ={btnFalse}>False</button>}\n            </div>\n            )\n        })\n\n       \n        return (\n    <div>\n     {array}\n    </div>\n    )\n }\n}\n\nconst style = {\n \n    backgroundColor:\"grey\",\n    marginTop: \"50px\"\n\n}\n\nconst btnStyle = {\n    backgroundColor: \"green\",\n    marginRight: \"10px\"\n}\n\nconst btnFalse = {\n    backgroundColor: \"red\"\n}\n\nexport default TriviaItem\n"]},"metadata":{},"sourceType":"module"}